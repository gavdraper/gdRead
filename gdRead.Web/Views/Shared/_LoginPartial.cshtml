@using Microsoft.Owin.Security

@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = "~/" }))
    {
        @Html.AntiForgeryToken()

        foreach (AuthenticationDescription p in loginProviders)
        {
            <button type="submit" class="LoginButton" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">Login/Register</button>
        }

    }

}


    </ul>
}
